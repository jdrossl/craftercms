##################################################
##              Content Repository              ##
##################################################
# Absolute path to repository base (all actual repositories will be under this)
studio.repo.basePath: ${sys:crafter.data.dir}/repos
# Sandbox git repository branch for every site
# studio.repo.siteSandboxBranch: master
# If not using environment-config.xml, environments are configured here
# Git repository branch for the `live` environment, default "live"
# studio.repo.published.live: live
# Git repository branch for the `staging` environment, default "staging"
# studio.repo.published.staging: staging

############################################################
##                    Preview Deployer                    ##
############################################################

# Default preview deployer URL (can be overridden per site)
studio.preview.defaultPreviewDeployerUrl: http://localhost:@DEPLOYER_PORT@/api/1/target/deploy/preview/{siteName}
# Default preview create target URL (can be overridden per site)
studio.preview.createTargetUrl: http://localhost:@DEPLOYER_PORT@/api/1/target/create
# Default preview create target URL (can be overridden per site)
studio.preview.deleteTargetUrl: http://localhost:@DEPLOYER_PORT@/api/1/target/delete/{siteEnv}/{siteName}
# URL to the preview Crafter Engine
studio.preview.engineUrl: http://localhost:@TOMCAT_HTTP_PORT@
# URL to the preview repository (aka Sandbox) where authors save work-in-progress
studio.preview.repoUrl: ${sys:crafter.data.dir}/repos/sites/{siteName}/sandbox

############################################################
##                   Preview Search                       ##
############################################################

studio.preview.search.createUrl: http://localhost:@TOMCAT_HTTP_PORT@/crafter-search/api/2/admin/index/create
studio.preview.search.deleteUrl: http://localhost:@TOMCAT_HTTP_PORT@/crafter-search/api/2/admin/index/delete/{siteName}

##################################################
##                   Database                   ##
##################################################
# Crafter Studio uses an embedded MariaDB while running unclustered
# Format:
# jdbc:DATABASE_PLATFORM;databaseName=DATABASE_NAME;create=true;user=DATABASE_USERNAME;password=DATABASE_USER_PASSWORD
# Note that a relative path is not suitable for a production deployment
studio.db.url: jdbc:mariadb://127.0.0.1:@MARIADB_PORT@/crafter?user=crafter&password=crafter

# Connection string used to initialize database. This creates the `crafter` schema, user or upgrades the database
studio.db.initializer.url: jdbc:mariadb://127.0.0.1:@MARIADB_PORT@?user=root&password=
# Port number for the embedded database (note this must match what's in the connection URLs in this config file)
studio.db.port: @MARIADB_PORT@
# Data folder for the embedded database
studio.db.dataPath: ${sys:crafter.data.dir}/db
# Socket path for the embedded database
studio.db.socket: ${sys:java.io.tmpdir}/MariaDB4j.@MARIADB_PORT@.sock

##################################################
##                   Security                   ##
##################################################
# Enable random admin password generation
# studio.db.initializer.randomAdminPassword.enabled: false
# Random admin password length
# studio.db.initializer.randomAdminPassword.length: 16
# Random admin password allowed chars
# studio.db.initializer.randomAdminPassword.chars: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*_=+-/

# Defines security provider for accessing repository. Possible values
# - db (users are stored in database)
# - ldap (users are imported from LDAP into the database)
# - headers (use when authenticating via headers)
# studio.security.type: ldap
#
# Salt for encrypting
# studio.security.cipher.salt: TDEsDF8vx3gV4c7G
# Key for encrypting
# studio.security.cipher.key: AoCcBdnsTa9R3DdG
# Enable/disable logout for headers authenticated users (SSO)
# studio.authentication.headers.logout.enabled: false
# If logout is enabled for headers authenticated users (SSO), set the endpoint of the SP or IdP logout, which should
# be called after local logout. The {baseUrl} macro is provided so that the browser is redirected back to Studio
# after logout (https://STUDIO_SERVER:STUDIO_PORT/studio)
# studio.authentication.headers.logout.url: /mellon/logout?ReturnTo={baseUrl}
# Studio authentication chain configuration
# studio.authentication.chain:
  # Authentication provider type
  # - provider: HEADERS
    # Authentication via headers enabled
    # enabled: false
    # Authentication header for secure key
    # secureKeyHeader: secure_key
    # Authentication headers secure key that is expected to match secure key value from headers
    # Typically this is placed in the header by the authentication agent, e.g. Apache mod_mellon
    # secureKeyHeaderValue: secure
    # Authentication header for username
    # usernameHeader: username
    # Authentication header for first name
    # firstNameHeader: firstname
    # Authentication header for last name
    # lastNameHeader: lastname
    # Authentication header for email
    # emailHeader: email
    # Authentication header for groups: comma separated list of sites and groups
    #   Example:
    #   site_author,site_xyz_developer
    # groupsHeader: groups
  # Authentication provider type
  # - provider: LDAP
    # Authentication via LDAP enabled
    # enabled: false
    # LDAP Server url
    # ldapUrl: ldap://localhost:389
    # LDAP bind DN (user)
    # ldapUsername: cn=Manager,dc=my-domain,dc=com
    # LDAP bind password
    # ldapPassword: secret
    # LDAP base context (directory root)
    # ldapBaseContext: dc=my-domain,dc=com
    # LDAP username attribute
    # usernameLdapAttribute: uid
    # LDAP first name attribute
    # firstNameLdapAttribute: cn
    # LDAP last name attribute
    # lastNameLdapAttribute: sn
    # Authentication header for email
    # emailLdapAttribute: mail
    # LDAP groups attribute
    # groupNameLdapAttribute: crafterGroup
    # LDAP groups attribute name regex
    # groupNameLdapAttributeRegex: .*
    # LDAP groups attribute match index
    # groupNameLdapAttributeMatchIndex: 0
# Authentication provider type
  # - provider: DB
    # Authentication via DB enabled
    # enabled: true

##################################################
##        SMTP Configuration (Email)            ##
##################################################
# Default value for from header when sending emails.
# studio.mail.from.default: admin@example.com
# SMTP server name to send emails.
# studio.mail.host: localhost
# SMTP port number to send emails.
studio.mail.port: @SMTP_PORT@
# SMTP username for authenticated access when sending emails.
# studio.mail.username:
# SMTP password for authenticated access when sending emails.
# studio.mail.password:
# Turn on/off (value true/false) SMTP authenaticated access protocol.
# studio.mail.smtp.auth: false
# Enable/disable (value true/false) SMTP TLS protocol when sending emails.
# studio.mail.smtp.starttls.enable: false
# Enable/disable (value true/false) SMTP EHLO protocol when sending emails.
# studio.mail.smtp.ehlo: true
# Enable/disable (value true/false) debug mode for email service. Enabling debug mode allows tracking/debugging communication between email service and SMTP server.
# studio.mail.debug: false

##################################################
##                 Clustering                   ##
##################################################
# Clustering requires an external (not embedded) database, configure it below
# External MariaDB database connection string
# studio.db.url: jdbc:mariadb://192.168.1.1:3306/crafter?user=crafter&password=crafter
# External MariaDB database connection string used to initialize database
# If using a database with an already created schema and user (like AWS RDS):
# studio.db.initializer.url: jdbc:mariadb://192.168.1.1:3306/crafter?user=USER&password=PASS
# If using a an empty database with root access to it:
# studio.db.initializer.url: jdbc:mariadb://192.168.1.1:3306?user=root&password=

# Cluster Syncers
# Sandbox Sync Job interval which is how often to sync the work-area
# studio.clustering.sandboxSyncJob.interval: 2000
# Published Sync Job interval which is how often to sync the published repos
# studio.clustering.publishedSyncJob.interval: 60000

# Cluster member registration, this registers *this* server into the pool
# Cluster node registration data, remember to uncomment the next line
# studio.clustering.node.registration:
#  cluster member local address (reachable to other cluster members)
#  localAddress: 10.1.1.150
#  authentication type to access local repository
#  possible values
#   - none (no authentication needed)
#   - basic (username/password authentication)
#   - token (authentication with security token)
#   - key (ssh authentication)
#  authenticationType: none
#  username to access local repository
#  username: user
#  password to access local repository
#  password: SuperSecurePassword
#  security token to access local repository
#  token: token
#  private key to access local repository (multiline string)
#  privateKey: |
#    -----BEGIN PRIVATE KEY-----
#    privateKey
#    -----END PRIVATE KEY-----

################################################################
##                             CORS                           ##
################################################################
# This is configured as permissive by default for ease of deployment
# Remember to tighten this up for production

# Disable CORS headers completely
# studio.cors.disable: false
# Value for the Access-Control-Allow-Origin header
# studio.cors.origins: '*'
# Value for the Access-Control-Allow-Headers header
# studio.cors.headers: '*'
# Value for the Access-Control-Allow-Methods header
# studio.cors.methods: '*'
# Value for the Access-Control-Allow-Credentials header
# studio.cors.credentials: true
# Value for the Access-Control-Max-Age header
# studio.cors.maxage: -1
# The active environment for multi environment configuration, e.g. qa, prod, dev
# studio.configuration.environment.active: ENV
